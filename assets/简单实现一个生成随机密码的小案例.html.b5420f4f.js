import{_ as p,f as t,a as e,c as o,b as n,g as c,h as l,i as s}from"./app.86e5e8f9.js";const i={},u=l(`<h2 id="\u524D\u8A00" tabindex="-1"><a class="header-anchor" href="#\u524D\u8A00" aria-hidden="true">#</a> \u524D\u8A00</h2><p>\u56E0\u4E3A\u6700\u8FD1\u5728\u7533\u8BF7\u5FAE\u4FE1\u652F\u4ED8\u7684\u65F6\u5019\uFF0C\u9700\u8981\u8BBE\u7F6EAPIv2\u5BC6\u94A5\uFF0832\u4F4D\u968F\u673A\u5BC6\u7801\uFF1A\u5927\u5C0F\u5199\u5B57\u6BCD\u3001\u6570\u5B57\uFF09\uFF0C\u4E4B\u524D\u4F7F\u7528\u8FC7\u7684\u76F8\u5173\u5DE5\u5177\u7F51\u7AD9\u4E5F\u6CA1\u6709\u6536\u85CF\u7684\u4E60\u60EF\uFF0C\u6BCF\u6B21\u5EA6\u5A18\u51FA\u6765\u4E00\u5927\u5806\uFF0C\u4E00\u65F6\u95F4\u4E0D\u77E5\u9053\u4F7F\u7528\u54EA\u4E2A\u597D\uFF0C\u6709\u7684\u7F51\u9875\u751F\u6210\u7684\u5BC6\u7801\uFF0C\u5728\u8BBE\u7F6E\u7684\u65F6\u5019\u8FD8\u63D0\u793A\u4E0D\u6B63\u786E\uFF0C\u56E0\u6B64\u6253\u7B97\u81EA\u5DF1\u5B9E\u73B0\u4E00\u4E2A\u751F\u6210\u968F\u673A\u5BC6\u7801\u7684\u5C0F\u5DE5\u5177\u3002</p><h2 id="\u9875\u9762\u5C55\u793A" tabindex="-1"><a class="header-anchor" href="#\u9875\u9762\u5C55\u793A" aria-hidden="true">#</a> \u9875\u9762\u5C55\u793A</h2><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/518381ea316542f58fb85bb6c45de168~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></p><p>\u8BE5\u5BC6\u7801\u751F\u6210\u5668\uFF0C\u53EF\u4EE5\u81EA\u7531\u9009\u62E9\u7531\u5927\u5199\u82F1\u6587\u5B57\u6BCD\uFF0C\u5C0F\u5199\u82F1\u6587\u5B57\u6BCD\uFF0C\u6570\u5B57\uFF0C\u7279\u6B8A\u7B26\u53F7\u7EC4\u6210\uFF0C\u518D\u9009\u62E9\u9700\u8981\u751F\u6210\u7684\u5BC6\u7801\u4F4D\u6570\uFF0C\u70B9\u51FB\u201C\u968F\u673A\u751F\u6210\u5BC6\u7801\u201D\u6309\u94AE\u751F\u6210\u8BE5\u4F4D\u6570\u7684\u968F\u673A\u5BC6\u7801\uFF1B\u70B9\u51FB\u201C\u590D\u5236\u201D\u6309\u94AE\u5B9E\u73B0\u628A\u751F\u6210\u663E\u793A\u7684\u5BC6\u7801\uFF0C\u590D\u5236\u5230\u526A\u8D34\u677F\u3002</p><h2 id="\u5B9E\u73B0\u601D\u8DEF" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u73B0\u601D\u8DEF" aria-hidden="true">#</a> \u5B9E\u73B0\u601D\u8DEF</h2><ol><li>\u5C06\u751F\u6210\u5927\u5199\u5B57\u6BCD\u3001\u5C0F\u5199\u5B57\u6BCD\u3001\u6570\u5B57\u3001\u7279\u6B8A\u7B26\u53F7\u7684\u65B9\u6CD5\u5C01\u88C5\u6210\u5404\u81EA\u7684\u51FD\u6570\uFF0C\u90FD\u53EF\u4EE5\u8FD4\u56DE\u4E00\u4E2A\u968F\u673A\u503C</li></ol><p>a. \u751F\u6210\u5927\u5199\u5B57\u6BCD \uFF08A-Z\u7684Unicode \u503C\u4ECE65-90\uFF09</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">getRandomUpper</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> String<span class="token punctuation">.</span><span class="token function">fromCharCode</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">26</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">65</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>b. \u751F\u6210\u5C0F\u5199\u5B57\u6BCD \uFF08a-z\u7684Unicode \u503C\u4ECE97-122\uFF09</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">getRandomLower</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> String<span class="token punctuation">.</span><span class="token function">fromCharCode</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">26</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">97</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>c. \u751F\u6210\u6570\u5B57 \uFF080-9\u7684Unicode \u503C\u4ECE48-57\uFF09</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">getRandomNumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> String<span class="token punctuation">.</span><span class="token function">fromCharCode</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">48</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>d. \u751F\u6210\u7279\u6B8A\u5B57\u7B26</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>
<span class="token keyword">function</span> <span class="token function">getRandomSymbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> symbols <span class="token operator">=</span> <span class="token string">&#39;!@#$%^&amp;*(){}[]=&lt;&gt;/,.&#39;</span>
    <span class="token keyword">return</span> symbols<span class="token punctuation">[</span>Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> symbols<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>c. \u5C06\u4E0A\u9762\u8FD9\u51E0\u4E2A\u51FD\u6570\u7EC4\u6210\u4E00\u4E2A\u5BF9\u8C61<code>randomFunc</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span>  randomFunc <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">upper</span><span class="token operator">:</span> getRandomUpper<span class="token punctuation">,</span>
    <span class="token literal-property property">lower</span><span class="token operator">:</span> getRondomLower<span class="token punctuation">,</span>
    <span class="token literal-property property">number</span><span class="token operator">:</span> getRandomNumber<span class="token punctuation">,</span>
    <span class="token literal-property property">symbol</span><span class="token operator">:</span> getRandomSymbol
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u5F15\u7533\u7684\u77E5\u8BC6\u70B9\uFF1A</strong></p><ul><li>fromCharCode() fromCharCode() \u53EF\u63A5\u53D7\u4E00\u4E2A\u6307\u5B9A\u7684 Unicode \u503C\uFF0C\u7136\u540E\u8FD4\u56DE\u4E00\u4E2A\u5B57\u7B26\u4E32\u3002<br> \u6CE8\u610F\uFF1A\u8BE5\u65B9\u6CD5\u662F String \u7684\u9759\u6001\u65B9\u6CD5\uFF0C\u5B57\u7B26\u4E32\u4E2D\u7684\u6BCF\u4E2A\u5B57\u7B26\u90FD\u7531\u5355\u72EC\u7684 Unicode \u6570\u5B57\u7F16\u7801\u6307\u5B9A\u3002</li></ul><p>\u4F7F\u7528\u8BED\u6CD5\uFF1A<code>String.fromCharCode(num1, ..., numN)</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> a <span class="token operator">=</span> String<span class="token punctuation">.</span><span class="token function">fromCharCode</span><span class="token punctuation">(</span><span class="token number">65</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
a \u8F93\u51FA\u7ED3\u679C<span class="token operator">:</span> <span class="token constant">A</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>Math.floor() \u8FD4\u56DE\u4E00\u4E2A\u8868\u793A\u5C0F\u4E8E\u6216\u7B49\u4E8E\u6307\u5B9A\u6570\u5B57\u7684\u6700\u5927\u6574\u6570\uFF08\u5411\u4E0B\u53D6\u6574\uFF09\u3002\u662F\xA0<code>Math</code>\xA0\u7684\u4E00\u4E2A\u9759\u6001\u65B9\u6CD5</p></li><li><p>Math.random() \u8FD4\u56DE\u4E00\u4E2A\u8303\u56F4\u4ECE<strong>0 \u5230</strong>\u5C0F\u4E8E<strong>1</strong>\u7684\u968F\u673A\u6D6E\u70B9\u6570</p></li></ul><p><code>Math.random() * 26</code> \u8868\u793A[0,26)\u4E4B\u95F4\u7684\u968F\u673A\u6570</p><ol start="2"><li>\u751F\u6210\u968F\u673A\u5BC6\u7801\u65B9\u6CD5</li></ol><p>\u5C06\u662F\u5426\u9009\u62E9\u5927\u5199\u82F1\u6587\u5B57\u6BCD\uFF0C\u5C0F\u5199\u82F1\u6587\u5B57\u6BCD\uFF0C\u6570\u5B57\uFF0C\u7279\u6B8A\u7B26\u53F7\u8FD9\u51E0\u4E2A\u7684\u72B6\u6001\u503C\u548C\u5BC6\u7801\u4F4D\u6570\u4F5C\u4E3A\u751F\u6210\u968F\u673A\u5BC6\u7801\u65B9\u6CD5\u7684\u53C2\u6570\uFF0C\u7B5B\u9009\u51FA\u4F5C\u4E3A\u5BC6\u7801\u7EC4\u6210\u90E8\u5206\uFF0C\u72B6\u6001\u4E3A\u9009\u4E2D\u7684\u503C\uFF08\u53C2\u6570\u4E3Atrue\uFF09\uFF0C\u5C06\u8FD9\u4E9B\u72B6\u6001\u4E3A\u9009\u4E2D\u7684\u503C\uFF0C\u904D\u5386\u5FAA\u73AF\u53D6\u5F97\u5C5E\u6027\u7684\u952E\u540D\uFF0C\u6839\u636E\u952E\u540D\u8C03\u7528<code>randomFunc</code>\u5BF9\u8C61\u4E2D\u7684\u5BF9\u5E94\u7684\u65B9\u6CD5\uFF0C\u5F97\u5230\u5BF9\u5E94\u7684\u8FD4\u56DE\u503C\u7EC4\u6210\u968F\u673A\u5BC6\u7801\u5E76\u8FD4\u56DE\uFF1B\u5982\u679C\u4F20\u5165\u7684\u53C2\u6570\u503C\u90FD\u4E3Afalse\uFF0C\u76F4\u63A5\u8FD4\u56DE\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">generatePassword</span><span class="token punctuation">(</span><span class="token parameter">lower<span class="token punctuation">,</span> upper<span class="token punctuation">,</span> number<span class="token punctuation">,</span> symbol<span class="token punctuation">,</span> length</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>lower<span class="token punctuation">,</span> upper<span class="token punctuation">,</span> number<span class="token punctuation">,</span> symbol<span class="token punctuation">,</span> length<span class="token punctuation">)</span>
    <span class="token keyword">let</span> generatedPassword <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>
    <span class="token keyword">const</span> typesCount <span class="token operator">=</span> lower <span class="token operator">+</span> upper <span class="token operator">+</span> number <span class="token operator">+</span> symbol
   <span class="token comment">//Object.values(item)[0] \u83B7\u53D6\u6570\u7EC4\u4E2D\u6BCF\u4E2A\u5BF9\u8C61\u7684\u503C  </span>
   <span class="token comment">// \u7B5B\u9009\u51FA\u503C\u4E3Atrue(\u72B6\u6001\u4E3A\u9009\u4E2D\u7684)\u7684\u5927\u5199\u82F1\u6587\u5B57\u6BCD\u3001\u5C0F\u5199\u82F1\u6587\u5B57\u6BCD\u3001\u6570\u5B57\u3001\u7279\u6B8A\u7B26\u53F7</span>
    <span class="token keyword">const</span> typesArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>lower<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>upper<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>number<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>symbol<span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> Object<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token punctuation">)</span>
    <span class="token comment">// \u72B6\u6001\u90FD\u4E3A\u672A\u9009\u4E2D\uFF0C\u5219\u90FD\u4E3Aflase\uFF0C\u52A0\u8D77\u6765\u5C31\u662F0\uFF1B\u76F4\u63A5\u8FD4\u56DE</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>typesCount <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> length<span class="token punctuation">;</span> i <span class="token operator">+=</span>  typesCount<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u904D\u5386\u5FAA\u73AF\u72B6\u6001\u4E3A\u9009\u4E2D\u7684\u5BF9\u8C61\u7EC4\u6210\u7684\u6570\u7EC4\uFF0C\u83B7\u53D6\u6BCF\u4E2A\u5BF9\u8C61\u7684\u5C5E\u6027\u540D\uFF0C\u6839\u636E\u5C5E\u6027\u540D\u8C03\u7528\u5404\u81EA\u751F\u6210\u51FD\u6570</span>
        typesArr<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">type</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">const</span> funcName <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
            generatedPassword <span class="token operator">+=</span> randomFunc<span class="token punctuation">[</span>funcName<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u622A\u53D6\u9009\u62E9\u7684\u5BC6\u7801\u4F4D\u6570\u957F\u5EA6\u7684\u968F\u673A\u5BC6\u7801</span>
    <span class="token keyword">const</span> finalPassword <span class="token operator">=</span> generatedPassword<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> length<span class="token punctuation">)</span>
    <span class="token keyword">return</span> finalPassword
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>\u751F\u6210\u968F\u673A\u5BC6\u7801\u6309\u94AE\u70B9\u51FB\u4E8B\u4EF6</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>generateEl<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> length <span class="token operator">=</span> <span class="token operator">+</span>lengthEl<span class="token punctuation">.</span>value
    <span class="token keyword">const</span> hasLower <span class="token operator">=</span> lowercaseEl<span class="token punctuation">.</span>checked
    <span class="token keyword">const</span> hasUpper <span class="token operator">=</span> uppercaseEl<span class="token punctuation">.</span>checked
    <span class="token keyword">const</span> hasNumber <span class="token operator">=</span> numbersEl<span class="token punctuation">.</span>checked
    <span class="token keyword">const</span> hasSymbol <span class="token operator">=</span> symbolsEl<span class="token punctuation">.</span>checked
    <span class="token comment">//\u628A\u83B7\u5F97\u7684\u968F\u673A\u5BC6\u7801\u5C55\u793A\u5230\u9875\u9762    </span>
    resultEl<span class="token punctuation">.</span>innerText <span class="token operator">=</span> <span class="token function">generatePassword</span><span class="token punctuation">(</span>hasLower<span class="token punctuation">,</span> hasUpper<span class="token punctuation">,</span> hasNumber<span class="token punctuation">,</span> hasSymbol<span class="token punctuation">,</span> length<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>\u590D\u5236\u5BC6\u7801</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>clipboardEl<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">,</span>copyPageUrl<span class="token punctuation">)</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">copyPageUrl</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> password <span class="token operator">=</span> resultEl<span class="token punctuation">.</span>innerText
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>password<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token punctuation">}</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token keyword">await</span> navigator<span class="token punctuation">.</span>clipboard<span class="token punctuation">.</span><span class="token function">writeText</span><span class="token punctuation">(</span>password<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&#39;\u5BC6\u7801\u590D\u5236\u6210\u529F!&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&quot;\u5BC6\u7801\u590D\u5236\u5931\u8D25!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,30),r=s("\u6CE8\uFF1A\u5173\u4E8E\u526A\u5207\u677F\u590D\u5236\u5185\u5BB9\u7684\u529F\u80FD\u53EF\u4EE5\u67E5\u770B\u8FD9\u7BC7\u6587\u7AE0"),k={href:"https://juejin.cn/post/7106343645682335758",target:"_blank",rel:"noopener noreferrer"},d=s("\u300Ajs\u5B9E\u73B0\u7B80\u5355\u529F\u80FD\u5408\u96C6\uFF08\u4E09\uFF09\u300B");function v(m,b){const a=t("ExternalLinkIcon");return e(),o("div",null,[u,n("p",null,[r,n("a",k,[d,c(a)])])])}var f=p(i,[["render",v],["__file","\u7B80\u5355\u5B9E\u73B0\u4E00\u4E2A\u751F\u6210\u968F\u673A\u5BC6\u7801\u7684\u5C0F\u6848\u4F8B.html.vue"]]);export{f as default};
